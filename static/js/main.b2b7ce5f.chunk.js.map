{"version":3,"sources":["components/Navigation/Navigation.jsx","components/UserMenu/UserMenu.jsx","components/AuthNav/AuthNav.jsx","components/AppBar/AppBar.jsx","routes/PrivateRoute.jsx","routes/PublicRoute.jsx","components/Loader/Loader.js","App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","redux/auth/authOperations.js","redux/auth/authSelectors.js","redux/auth/authSlice.js","redux/contacts/contactsAction.js","components/Navigation/Navigation.module.css","components/UserMenu/UserMenu.module.css","components/AuthNav/AuthNav.module.css","components/Container/Container.jsx","components/Container/Container.module.css"],"names":["styles","activeLink","color","Navigation","isLoggedIn","useSelector","authSelectors","getIsLoggedIn","Navbar","to","exact","className","scc","link","activeStyle","UserMenu","dispatch","useDispatch","name","getUsername","container_user","Button","type","onClick","authOperations","logOut","AuthNav","s","AppBar","PrivateRoute","children","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","LinearIndeterminate","Box","sx","width","LinearProgress","HomePage","lazy","RegisterPage","LoginPage","ContactsPage","App","useEffect","fetchCurrentUser","Container","fallback","path","reducerItem","createReducer","addContactSuccess","state","payload","deleteContactsSuccess","filter","contact","id","fetchContactsSuccess","_","reducerFilter","filterContact","reducerContacts","combineReducers","items","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","console","log","post","data","alert","message","logIn","thunkAPI","getState","persistedToken","rejectWithValue","get","user","getIsFetchingCurrent","isFetchingCurrentUser","authSlice","createSlice","initialState","email","extraReducers","fulfilled","action","pending","rejected","fetchContactsRequest","createAction","fetchContactsError","addContactRequest","addContactError","deleteContactsRequest","deleteContactsError","module","exports","container"],"mappings":"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","file":"static/js/main.b2b7ce5f.chunk.js","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { authSelectors } from '../../redux/auth';\nimport { Navbar } from 'react-bootstrap';\nimport scc from './Navigation.module.css'\n\nconst styles = {\n  activeLink: {\n    color: '#ffc107',\n  },\n};\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Navbar>\n      <NavLink to=\"/\" exact className={scc.link} activeStyle={styles.activeLink}>\n        Home\n      </NavLink>\n\n      {isLoggedIn && (\n        <>\n          <NavLink\n            to=\"/contacts\"\n            exact\n            className={scc.link}\n            activeStyle={styles.activeLink}\n          >\n            Contacts\n          </NavLink>\n        </>\n      )}\n    </Navbar>\n  );\n};\n\nexport default Navigation;\n","\nimport { Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport styles from './UserMenu.module.css';\nimport { FcBusinessman } from 'react-icons/fc'\n\n\n\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n\n  return (\n    <div className={styles.container_user}>\n      <span className={styles.name}>Welcome {name} {' '}\n        <FcBusinessman />\n      </span>\n      <Button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\n        Logout\n      </Button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './AuthNav.module.css';\nconst styles = {\n  activeLink: {\n      color: '#ffc107'\n  },\n};\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <NavLink\n        to=\"/register\"\n        exact\n        className={s.link}\n        \n        activeStyle={styles.activeLink}\n      >\n        Sign up\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        exact\n        className={s.link}\n        activeStyle={styles.activeLink}\n      >\n        Log in\n      </NavLink>\n    </div>\n  );\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Navigation from '../Navigation/Navigation';\nimport UserMenu from '../UserMenu';\nimport AuthNav from '../AuthNav/AuthNav';\nimport { authSelectors } from '../../redux/auth';\nimport { Navbar } from 'react-bootstrap';\n\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Navbar>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </Navbar>\n  );\n}\n\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\nexport default function PrivateRoute({\n  children,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport LinearProgress from '@mui/material/LinearProgress';\n\nexport default function LinearIndeterminate() {\n  return (\n    <Box sx={{ width: '100%' }}>\n      <LinearProgress />\n    </Box>\n  );\n}\n","import { useEffect, Suspense, lazy } from 'react';\nimport { useDispatch, } from 'react-redux';\nimport { Switch } from 'react-router-dom';\nimport './App.css';\nimport AppBar from './components/AppBar/AppBar';\nimport Container from './components/Container/Container';\nimport PrivateRoute from './routes/PrivateRoute';\nimport PublicRoute from './routes/PublicRoute';\nimport { authOperations, } from './redux/auth';\nimport LinearProgress from './components/Loader/Loader'\n\nconst HomePage = lazy(() => import('./pages/HomePage'));\nconst RegisterPage = lazy(() => import('./pages/RegisterPage'));\nconst LoginPage = lazy(() => import('./pages/LoginPage'));\nconst ContactsPage = lazy(() => import('./pages/ContactsPage'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <>\n        <AppBar />\n        <Switch>\n          <Suspense fallback={<LinearProgress />}>\n            <PublicRoute exact path=\"/\">\n              <HomePage />\n            </PublicRoute>\n            <PublicRoute exact path=\"/register\" restricted>\n              <RegisterPage />\n            </PublicRoute>\n            <PublicRoute\n              exact\n              path=\"/login\"\n              redirectTo=\"/contacts\"\n              restricted\n            >\n              <LoginPage />\n            </PublicRoute>\n            <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n              <ContactsPage />\n            </PrivateRoute>\n          </Suspense>\n        </Switch>\n      </>\n    </Container>\n  );\n}\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport {\n  fetchContactsSuccess,\n  deleteContactsSuccess,\n  filterContact,\n  addContactSuccess,\n} from './contactsAction';\n\nconst reducerItem = createReducer([], {\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactsSuccess]: (state, { payload }) => state.filter(contact => contact.id !== payload),\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n});\n\nconst reducerFilter = createReducer('', {\n    [filterContact]: (_, { payload }) => payload,\n  });\n\nexport const reducerContacts = combineReducers({\n  items: reducerItem,\n  filter: reducerFilter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { authReducer } from './auth';\nimport { reducerContacts } from './contacts/contactsReducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: reducerContacts,\n  },\n\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = createAsyncThunk('auth/register', async credentials => {\n  try {\n    console.log('credentials ', credentials);\n    const { data } = await axios.post('/users/signup', credentials);\n\n    token.set(data.token);\n    console.log('data = ', data);\n    return data;\n  } catch (error) {\n      alert(error.message);\n  }\n});\n\nconst logIn = createAsyncThunk('auth/login', async credentials => {\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n\n    token.set(data.token);\n    return data;\n  } catch (error) {\n      alert(error.message);\n  }\n});\n\nconst logOut = createAsyncThunk('auth/logout', async () => {\n  try {\n    await axios.post('/users/logout');\n    \n    token.unset();\n  } catch (error) {\n      alert(error.message);\n  }\n});\n\nconst fetchCurrentUser = createAsyncThunk('auth/refresh', async (_, thunkAPI) => {\n  const state = thunkAPI.getState();\n  const persistedToken = state.auth.token;\n\n  if (persistedToken === null) {\n    return thunkAPI.rejectWithValue();\n  }\n\n  token.set(persistedToken);\n\n  try {\n    const { data } = await axios.get('/users/current');\n    return data;\n  } catch (error) {\n      alert(error.message);\n  }\n});\n\nconst authOperations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default authOperations;\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\nconst getUsername = state => state.auth.user.name;\nconst getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUsername,\n  getIsFetchingCurrent,\n};\nexport default authSelectors;\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './authOperations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetchingCurrentUser: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.pending](state) {\n      state.isFetchingCurrentUser = true;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isFetchingCurrentUser = false;\n    },\n    [authOperations.fetchCurrentUser.rejected](state) {\n      state.isFetchingCurrentUser = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { createAction } from '@reduxjs/toolkit';\n\n\nexport const fetchContactsRequest = createAction('/contacts/fetchContactsRequest');\nexport const fetchContactsSuccess = createAction('/contacts/fetchContactsSuccess');\nexport const fetchContactsError = createAction('/contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('/contacts/addContactRequest');\nexport const addContactSuccess = createAction('/contacts/addContactSuccess');\nexport const addContactError = createAction('/contacts/addContactError');\n\nexport const deleteContactsRequest = createAction('/contacts/deleteContactsRequest');\nexport const deleteContactsSuccess = createAction('/contacts/deleteContactsSuccess');\nexport const deleteContactsError = createAction('/contacts/deleteContactsError');\n\nexport const filterContact = createAction('filter/contact');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__12o2K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container_user\":\"UserMenu_container_user__1VZkE\",\"name\":\"UserMenu_name__3e8KV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__2ejsg\",\"activeLink\":\"AuthNav_activeLink__3huQJ\"};","import s from './Container.module.css';\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};"],"sourceRoot":""}