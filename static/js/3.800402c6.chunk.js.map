{"version":3,"sources":["pages/pages.module.css","components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contactsOperations.js","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"names":["module","exports","axios","defaults","baseURL","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","ContactForm","dispatch","useDispatch","useSelector","useState","setName","number","setNumber","handleChange","e","target","value","Form","onSubmit","contactName","preventDefault","some","Notiflix","Notify","warning","addContactRequest","post","then","data","addContactSuccess","catch","error","addContactError","success","className","s","form","Group","Label","Control","type","pattern","title","required","own","onChange","Button","ContactListItem","id","onDeleteContact","deleteContactsRequest","delete","deleteContactsSuccess","deleteContactsError","deleteContacts","failure","scc","contactListItem","buttonDelete","onClick","ContactList","list","map","Filter","autoComplete","label","placeholder","filterContact","App","useEffect","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","Container"],"mappings":"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","file":"static/js/3.800402c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"pages_form__1I4Oh\",\"label\":\"pages_label__2D4nd\",\"title\":\"pages_title__1UVfo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"own\":\"ContactForm_own__1hond\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactListItem_contactListItem__2urGF\",\"contact\":\"ContactListItem_contact__AiY4X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"contacts\":\"ContactList_contacts__1Ny0J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"form\":\"Filter_form__2qyBI\",\"label\":\"Filter_label__3DcZT\"};","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n  addContactSuccess,\n  addContactRequest,\n  addContactError,\n} from './contactsAction';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n\nexport const addContact = contact => dispatch => {\n  dispatch(addContactRequest());\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => {\n      dispatch(addContactSuccess(data));\n    })\n    .catch(error => dispatch(addContactError(error)));\n};\n\nexport const deleteContacts = id => dispatch => {\n  dispatch(deleteContactsRequest());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactsSuccess(id)))\n    .catch(error => dispatch(deleteContactsError(error)));\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import { useState } from 'react';\nimport { addContact } from '../../redux/contacts/contactsOperations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport s from './ContactForm.module.css';\nimport { getContacts } from '../../redux/contacts/contactsSelectors';\nimport { Button, Form } from 'react-bootstrap';\nimport Notiflix from 'notiflix';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        return;\n\n      case 'number':\n        setNumber(value);\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  const findByName = contactName => {\n    return contacts.some(({ name }) => name === contactName);\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (findByName(name)) {\n      Notiflix.Notify.warning(`${name} is already in contacts`);\n    } else {\n      dispatch(addContact({ name, number }));\n      Notiflix.Notify.success(`added contact ${name} : ${number}`)\n    }\n    reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} className={s.form}>\n      <Form.Group className=\"mb-2\">\n        <Form.Label>\n          Name\n          <Form.Control\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            className={s.own}\n            onChange={handleChange}\n          />\n        </Form.Label>\n      </Form.Group>\n      <Form.Group className=\"mb-2\">\n        <Form.Label>\n          Number\n          <Form.Control\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            className={s.own}\n            onChange={handleChange}\n          />\n        </Form.Label>\n      </Form.Group>\n      <Button type=\"submit\">\n        Add contact\n      </Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { deleteContacts } from '../../redux/contacts/contactsOperations';\nimport { useDispatch } from 'react-redux';\nimport scc from './ContactListItem.module.css';\nimport { Button } from 'react-bootstrap';\nimport Notiflix from 'notiflix';\n\nconst ContactListItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  const onDeleteContact = id => dispatch(deleteContacts(id),\n    Notiflix.Notify.failure(`contact ${name} deleted`));\n\n  return (\n    <li className={scc.contactListItem}>\n      <p className={scc.contact}>\n        {' '}\n        {name}: {number}\n      </p>\n      <Button\n        className={scc.buttonDelete}\n        type=\"button\"\n        onClick={() => onDeleteContact(id)}\n      >\n        Delete\n      </Button>\n    </li>\n  );\n\n}\n\nexport default ContactListItem;\n","import React from 'react';\nimport ContactListItem from '../ContactListItem/ContactListItem';\n\nimport scc from './ContactList.module.css';\nimport { useSelector } from 'react-redux';\nimport { getVisibleContacts } from '../../redux/contacts/contactsSelectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  return (\n    <div className={scc.contacts}>\n      <ul className={scc.list}>\n        {contacts.map(({ id, name, number }) => (\n          <ContactListItem key={id} id={id} name={name} number={number} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from '../../redux/contacts/contactsAction';\nimport { getFilter } from '../../redux/contacts/contactsSelectors';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const changeFilter = e => {\n    return dispatch(filterContact(e.target.value));\n  };\n\n  return (\n    <Form autoComplete=\"off\" className={s.form}>\n      <Form.Group className=\"mb-3\">\n        <Form.Label className={s.label}>\n          Find contacts by name\n          <Form.Control\n            placeholder=\"Enter the name you want to find\"\n            type=\"text\"\n            name=\"filter\"\n            className={s.filter}\n            value={filter}\n            onChange={changeFilter}\n          />\n        </Form.Label>\n      </Form.Group>\n    </Form>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport ContactForm from '../components/ContactForm';\nimport ContactList from '../components/ContactList';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Filter from '../components/Filter';\nimport '../App.css';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/contactsOperations';\nimport scc from './pages.module.css';\nimport Container from '../components/Container/Container';\n\n\nconst App = () => {\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <h1 className={scc.title}>Phone book</h1>\n      <ContactForm />\n      <h2 className={scc.title}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default App;\n"],"sourceRoot":""}